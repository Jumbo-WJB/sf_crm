<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shufensoft.crm.biz.dao.generation.shake.ShakeObtainMapper" >
  <resultMap id="BaseResultMap" type="com.shufensoft.crm.biz.domain.generation.shake.ShakeObtain" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="max_seller_id" property="maxSellerId" jdbcType="BIGINT" />
    <result column="min_seller_id" property="minSellerId" jdbcType="BIGINT" />
    <result column="avg_seller_id" property="avgSellerId" jdbcType="BIGINT" />
    <result column="count_seller_id" property="countSellerId" jdbcType="BIGINT" />
    <result column="sum_seller_id" property="sumSellerId" jdbcType="BIGINT" />
    <result column="max_obtain_date" property="maxObtainDate" jdbcType="BIGINT" />
    <result column="min_obtain_date" property="minObtainDate" jdbcType="BIGINT" />
    <result column="avg_obtain_date" property="avgObtainDate" jdbcType="BIGINT" />
    <result column="count_obtain_date" property="countObtainDate" jdbcType="BIGINT" />
    <result column="sum_obtain_date" property="sumObtainDate" jdbcType="TIMESTAMP" />
    <result column="max_obtain_id" property="maxObtainId" jdbcType="BIGINT" />
    <result column="min_obtain_id" property="minObtainId" jdbcType="BIGINT" />
    <result column="avg_obtain_id" property="avgObtainId" jdbcType="BIGINT" />
    <result column="count_obtain_id" property="countObtainId" jdbcType="BIGINT" />
    <result column="sum_obtain_id" property="sumObtainId" jdbcType="BIGINT" />
    <result column="max_rock_id" property="maxRockId" jdbcType="BIGINT" />
    <result column="min_rock_id" property="minRockId" jdbcType="BIGINT" />
    <result column="avg_rock_id" property="avgRockId" jdbcType="BIGINT" />
    <result column="count_rock_id" property="countRockId" jdbcType="BIGINT" />
    <result column="sum_rock_id" property="sumRockId" jdbcType="BIGINT" />
    <result column="max_shake_date" property="maxShakeDate" jdbcType="BIGINT" />
    <result column="min_shake_date" property="minShakeDate" jdbcType="BIGINT" />
    <result column="avg_shake_date" property="avgShakeDate" jdbcType="BIGINT" />
    <result column="count_shake_date" property="countShakeDate" jdbcType="BIGINT" />
    <result column="sum_shake_date" property="sumShakeDate" jdbcType="TIMESTAMP" />
    <result column="max_shake_status" property="maxShakeStatus" jdbcType="BIGINT" />
    <result column="min_shake_status" property="minShakeStatus" jdbcType="BIGINT" />
    <result column="avg_shake_status" property="avgShakeStatus" jdbcType="BIGINT" />
    <result column="count_shake_status" property="countShakeStatus" jdbcType="BIGINT" />
    <result column="sum_shake_status" property="sumShakeStatus" jdbcType="VARCHAR" />
    <result column="max_rock_type" property="maxRockType" jdbcType="BIGINT" />
    <result column="min_rock_type" property="minRockType" jdbcType="BIGINT" />
    <result column="avg_rock_type" property="avgRockType" jdbcType="BIGINT" />
    <result column="count_rock_type" property="countRockType" jdbcType="BIGINT" />
    <result column="sum_rock_type" property="sumRockType" jdbcType="VARCHAR" />
    <result column="max_rock_result" property="maxRockResult" jdbcType="BIGINT" />
    <result column="min_rock_result" property="minRockResult" jdbcType="BIGINT" />
    <result column="avg_rock_result" property="avgRockResult" jdbcType="BIGINT" />
    <result column="count_rock_result" property="countRockResult" jdbcType="BIGINT" />
    <result column="sum_rock_result" property="sumRockResult" jdbcType="VARCHAR" />
    <result column="max_rock_title" property="maxRockTitle" jdbcType="BIGINT" />
    <result column="min_rock_title" property="minRockTitle" jdbcType="BIGINT" />
    <result column="avg_rock_title" property="avgRockTitle" jdbcType="BIGINT" />
    <result column="count_rock_title" property="countRockTitle" jdbcType="BIGINT" />
    <result column="sum_rock_title" property="sumRockTitle" jdbcType="VARCHAR" />
    <result column="max_user_id" property="maxUserId" jdbcType="BIGINT" />
    <result column="min_user_id" property="minUserId" jdbcType="BIGINT" />
    <result column="avg_user_id" property="avgUserId" jdbcType="BIGINT" />
    <result column="count_user_id" property="countUserId" jdbcType="BIGINT" />
    <result column="sum_user_id" property="sumUserId" jdbcType="BIGINT" />
    <result column="max_is_deleted" property="maxIsDeleted" jdbcType="BIGINT" />
    <result column="min_is_deleted" property="minIsDeleted" jdbcType="BIGINT" />
    <result column="avg_is_deleted" property="avgIsDeleted" jdbcType="BIGINT" />
    <result column="count_is_deleted" property="countIsDeleted" jdbcType="BIGINT" />
    <result column="sum_is_deleted" property="sumIsDeleted" jdbcType="VARCHAR" />
    <result column="max_modified_by" property="maxModifiedBy" jdbcType="BIGINT" />
    <result column="min_modified_by" property="minModifiedBy" jdbcType="BIGINT" />
    <result column="avg_modified_by" property="avgModifiedBy" jdbcType="BIGINT" />
    <result column="count_modified_by" property="countModifiedBy" jdbcType="BIGINT" />
    <result column="sum_modified_by" property="sumModifiedBy" jdbcType="VARCHAR" />
    <result column="max_created_by" property="maxCreatedBy" jdbcType="BIGINT" />
    <result column="min_created_by" property="minCreatedBy" jdbcType="BIGINT" />
    <result column="avg_created_by" property="avgCreatedBy" jdbcType="BIGINT" />
    <result column="count_created_by" property="countCreatedBy" jdbcType="BIGINT" />
    <result column="sum_created_by" property="sumCreatedBy" jdbcType="VARCHAR" />
    <result column="max_gmt_modified" property="maxGmtModified" jdbcType="BIGINT" />
    <result column="min_gmt_modified" property="minGmtModified" jdbcType="BIGINT" />
    <result column="avg_gmt_modified" property="avgGmtModified" jdbcType="BIGINT" />
    <result column="count_gmt_modified" property="countGmtModified" jdbcType="BIGINT" />
    <result column="sum_gmt_modified" property="sumGmtModified" jdbcType="TIMESTAMP" />
    <result column="max_gmt_created" property="maxGmtCreated" jdbcType="BIGINT" />
    <result column="min_gmt_created" property="minGmtCreated" jdbcType="BIGINT" />
    <result column="avg_gmt_created" property="avgGmtCreated" jdbcType="BIGINT" />
    <result column="count_gmt_created" property="countGmtCreated" jdbcType="BIGINT" />
    <result column="sum_gmt_created" property="sumGmtCreated" jdbcType="TIMESTAMP" />
    <result column="max_id" property="maxId" jdbcType="BIGINT" />
    <result column="min_id" property="minId" jdbcType="BIGINT" />
    <result column="avg_id" property="avgId" jdbcType="BIGINT" />
    <result column="count_id" property="countId" jdbcType="BIGINT" />
    <result column="sum_id" property="sumId" jdbcType="BIGINT" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="modified_by" property="modifiedBy" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="rock_title" property="rockTitle" jdbcType="VARCHAR" />
    <result column="rock_result" property="rockResult" jdbcType="VARCHAR" />
    <result column="rock_type" property="rockType" jdbcType="VARCHAR" />
    <result column="shake_status" property="shakeStatus" jdbcType="VARCHAR" />
    <result column="shake_date" property="shakeDate" jdbcType="TIMESTAMP" />
    <result column="rock_id" property="rockId" jdbcType="BIGINT" />
    <result column="obtain_id" property="obtainId" jdbcType="BIGINT" />
    <result column="obtain_date" property="obtainDate" jdbcType="TIMESTAMP" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <trim prefix="(" suffix=")" prefixOverrides="and" >
        IS_DELETED = '0'
        <foreach collection="oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </trim>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <trim prefix="(" suffix=")" prefixOverrides="and" >
        IS_DELETED = '0'
        <foreach collection="example.oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </trim>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gmt_created, gmt_modified, created_by, modified_by, is_deleted, user_id, rock_title, 
    rock_result, rock_type, shake_status, shake_date, rock_id, obtain_id, obtain_date, 
    seller_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shufensoft.crm.biz.domain.generation.shake.ShakeObtainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <if test="!definedQueryColumns" >
      <include refid="Base_Column_List" />
    </if>
    <if test="definedQueryColumns" >
      <foreach collection="queryColumns" item="queryColumn" separator="," >
        ${queryColumn}
      </foreach>
    </if>
    from shake_obtain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="forUpdate" >
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from shake_obtain
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update shake_obtain
    set IS_DELETED = '1'
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shufensoft.crm.biz.domain.generation.shake.ShakeObtainExample" >
    update shake_obtain
    set IS_DELETED = '1'
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shufensoft.crm.biz.domain.generation.shake.ShakeObtain" useGeneratedKeys="true" keyProperty="id" >
    insert into shake_obtain (id, gmt_created, gmt_modified, 
      created_by, modified_by, is_deleted, 
      user_id, rock_title, rock_result, 
      rock_type, shake_status, shake_date, 
      rock_id, obtain_id, obtain_date, 
      seller_id)
    values (#{id,jdbcType=BIGINT}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=VARCHAR}, #{modifiedBy,jdbcType=VARCHAR}, #{isDeleted,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{rockTitle,jdbcType=VARCHAR}, #{rockResult,jdbcType=VARCHAR}, 
      #{rockType,jdbcType=VARCHAR}, #{shakeStatus,jdbcType=VARCHAR}, #{shakeDate,jdbcType=TIMESTAMP}, 
      #{rockId,jdbcType=BIGINT}, #{obtainId,jdbcType=BIGINT}, #{obtainDate,jdbcType=TIMESTAMP}, 
      #{sellerId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.shufensoft.crm.biz.domain.generation.shake.ShakeObtain" useGeneratedKeys="true" keyProperty="id" >
    insert into shake_obtain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="rockTitle != null" >
        rock_title,
      </if>
      <if test="rockResult != null" >
        rock_result,
      </if>
      <if test="rockType != null" >
        rock_type,
      </if>
      <if test="shakeStatus != null" >
        shake_status,
      </if>
      <if test="shakeDate != null" >
        shake_date,
      </if>
      <if test="rockId != null" >
        rock_id,
      </if>
      <if test="obtainId != null" >
        obtain_id,
      </if>
      <if test="obtainDate != null" >
        obtain_date,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="rockTitle != null" >
        #{rockTitle,jdbcType=VARCHAR},
      </if>
      <if test="rockResult != null" >
        #{rockResult,jdbcType=VARCHAR},
      </if>
      <if test="rockType != null" >
        #{rockType,jdbcType=VARCHAR},
      </if>
      <if test="shakeStatus != null" >
        #{shakeStatus,jdbcType=VARCHAR},
      </if>
      <if test="shakeDate != null" >
        #{shakeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rockId != null" >
        #{rockId,jdbcType=BIGINT},
      </if>
      <if test="obtainId != null" >
        #{obtainId,jdbcType=BIGINT},
      </if>
      <if test="obtainDate != null" >
        #{obtainDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shufensoft.crm.biz.domain.generation.shake.ShakeObtainExample" resultType="java.lang.Integer" >
    select count(*) from shake_obtain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shake_obtain
    <set >
      <trim suffixOverrides="," >
        <if test="record.gmtCreated!=null and record.gmtCreatedExpression==null" >
          gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
        </if>
        <if test="record.gmtCreatedExpression!=null" >
          gmt_created = ${record.gmtCreatedExpression},
        </if>
        <if test="record.gmtModified!=null and record.gmtModifiedExpression==null" >
          gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        </if>
        <if test="record.gmtModifiedExpression!=null" >
          gmt_modified = ${record.gmtModifiedExpression},
        </if>
        <if test="record.createdBy!=null and record.createdByExpression==null" >
          created_by = #{record.createdBy,jdbcType=VARCHAR},
        </if>
        <if test="record.createdByExpression!=null" >
          created_by = ${record.createdByExpression},
        </if>
        <if test="record.modifiedBy!=null and record.modifiedByExpression==null" >
          modified_by = #{record.modifiedBy,jdbcType=VARCHAR},
        </if>
        <if test="record.modifiedByExpression!=null" >
          modified_by = ${record.modifiedByExpression},
        </if>
        <if test="record.isDeleted!=null and record.isDeletedExpression==null" >
          is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
        </if>
        <if test="record.isDeletedExpression!=null" >
          is_deleted = ${record.isDeletedExpression},
        </if>
        <if test="record.userId!=null and record.userIdExpression==null" >
          user_id = #{record.userId,jdbcType=BIGINT},
        </if>
        <if test="record.userIdExpression!=null" >
          user_id = ${record.userIdExpression},
        </if>
        <if test="record.rockTitle!=null and record.rockTitleExpression==null" >
          rock_title = #{record.rockTitle,jdbcType=VARCHAR},
        </if>
        <if test="record.rockTitleExpression!=null" >
          rock_title = ${record.rockTitleExpression},
        </if>
        <if test="record.rockResult!=null and record.rockResultExpression==null" >
          rock_result = #{record.rockResult,jdbcType=VARCHAR},
        </if>
        <if test="record.rockResultExpression!=null" >
          rock_result = ${record.rockResultExpression},
        </if>
        <if test="record.rockType!=null and record.rockTypeExpression==null" >
          rock_type = #{record.rockType,jdbcType=VARCHAR},
        </if>
        <if test="record.rockTypeExpression!=null" >
          rock_type = ${record.rockTypeExpression},
        </if>
        <if test="record.shakeStatus!=null and record.shakeStatusExpression==null" >
          shake_status = #{record.shakeStatus,jdbcType=VARCHAR},
        </if>
        <if test="record.shakeStatusExpression!=null" >
          shake_status = ${record.shakeStatusExpression},
        </if>
        <if test="record.shakeDate!=null and record.shakeDateExpression==null" >
          shake_date = #{record.shakeDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.shakeDateExpression!=null" >
          shake_date = ${record.shakeDateExpression},
        </if>
        <if test="record.rockId!=null and record.rockIdExpression==null" >
          rock_id = #{record.rockId,jdbcType=BIGINT},
        </if>
        <if test="record.rockIdExpression!=null" >
          rock_id = ${record.rockIdExpression},
        </if>
        <if test="record.obtainId!=null and record.obtainIdExpression==null" >
          obtain_id = #{record.obtainId,jdbcType=BIGINT},
        </if>
        <if test="record.obtainIdExpression!=null" >
          obtain_id = ${record.obtainIdExpression},
        </if>
        <if test="record.obtainDate!=null and record.obtainDateExpression==null" >
          obtain_date = #{record.obtainDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.obtainDateExpression!=null" >
          obtain_date = ${record.obtainDateExpression},
        </if>
        <if test="record.sellerId!=null and record.sellerIdExpression==null" >
          seller_id = #{record.sellerId,jdbcType=BIGINT},
        </if>
        <if test="record.sellerIdExpression!=null" >
          seller_id = ${record.sellerIdExpression},
        </if>
      </trim>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shake_obtain
    set id = #{record.id,jdbcType=BIGINT},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      modified_by = #{record.modifiedBy,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      rock_title = #{record.rockTitle,jdbcType=VARCHAR},
      rock_result = #{record.rockResult,jdbcType=VARCHAR},
      rock_type = #{record.rockType,jdbcType=VARCHAR},
      shake_status = #{record.shakeStatus,jdbcType=VARCHAR},
      shake_date = #{record.shakeDate,jdbcType=TIMESTAMP},
      rock_id = #{record.rockId,jdbcType=BIGINT},
      obtain_id = #{record.obtainId,jdbcType=BIGINT},
      obtain_date = #{record.obtainDate,jdbcType=TIMESTAMP},
      seller_id = #{record.sellerId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shufensoft.crm.biz.domain.generation.shake.ShakeObtain" >
    update shake_obtain
    <set >
      <trim suffixOverrides="," >
        <if test="record.gmtCreated!=null and record.gmtCreatedExpression==null" >
          gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
        </if>
        <if test="record.gmtCreatedExpression!=null" >
          gmt_created = ${record.gmtCreatedExpression},
        </if>
        <if test="record.gmtModified!=null and record.gmtModifiedExpression==null" >
          gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        </if>
        <if test="record.gmtModifiedExpression!=null" >
          gmt_modified = ${record.gmtModifiedExpression},
        </if>
        <if test="record.createdBy!=null and record.createdByExpression==null" >
          created_by = #{record.createdBy,jdbcType=VARCHAR},
        </if>
        <if test="record.createdByExpression!=null" >
          created_by = ${record.createdByExpression},
        </if>
        <if test="record.modifiedBy!=null and record.modifiedByExpression==null" >
          modified_by = #{record.modifiedBy,jdbcType=VARCHAR},
        </if>
        <if test="record.modifiedByExpression!=null" >
          modified_by = ${record.modifiedByExpression},
        </if>
        <if test="record.isDeleted!=null and record.isDeletedExpression==null" >
          is_deleted = #{record.isDeleted,jdbcType=VARCHAR},
        </if>
        <if test="record.isDeletedExpression!=null" >
          is_deleted = ${record.isDeletedExpression},
        </if>
        <if test="record.userId!=null and record.userIdExpression==null" >
          user_id = #{record.userId,jdbcType=BIGINT},
        </if>
        <if test="record.userIdExpression!=null" >
          user_id = ${record.userIdExpression},
        </if>
        <if test="record.rockTitle!=null and record.rockTitleExpression==null" >
          rock_title = #{record.rockTitle,jdbcType=VARCHAR},
        </if>
        <if test="record.rockTitleExpression!=null" >
          rock_title = ${record.rockTitleExpression},
        </if>
        <if test="record.rockResult!=null and record.rockResultExpression==null" >
          rock_result = #{record.rockResult,jdbcType=VARCHAR},
        </if>
        <if test="record.rockResultExpression!=null" >
          rock_result = ${record.rockResultExpression},
        </if>
        <if test="record.rockType!=null and record.rockTypeExpression==null" >
          rock_type = #{record.rockType,jdbcType=VARCHAR},
        </if>
        <if test="record.rockTypeExpression!=null" >
          rock_type = ${record.rockTypeExpression},
        </if>
        <if test="record.shakeStatus!=null and record.shakeStatusExpression==null" >
          shake_status = #{record.shakeStatus,jdbcType=VARCHAR},
        </if>
        <if test="record.shakeStatusExpression!=null" >
          shake_status = ${record.shakeStatusExpression},
        </if>
        <if test="record.shakeDate!=null and record.shakeDateExpression==null" >
          shake_date = #{record.shakeDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.shakeDateExpression!=null" >
          shake_date = ${record.shakeDateExpression},
        </if>
        <if test="record.rockId!=null and record.rockIdExpression==null" >
          rock_id = #{record.rockId,jdbcType=BIGINT},
        </if>
        <if test="record.rockIdExpression!=null" >
          rock_id = ${record.rockIdExpression},
        </if>
        <if test="record.obtainId!=null and record.obtainIdExpression==null" >
          obtain_id = #{record.obtainId,jdbcType=BIGINT},
        </if>
        <if test="record.obtainIdExpression!=null" >
          obtain_id = ${record.obtainIdExpression},
        </if>
        <if test="record.obtainDate!=null and record.obtainDateExpression==null" >
          obtain_date = #{record.obtainDate,jdbcType=TIMESTAMP},
        </if>
        <if test="record.obtainDateExpression!=null" >
          obtain_date = ${record.obtainDateExpression},
        </if>
        <if test="record.sellerId!=null and record.sellerIdExpression==null" >
          seller_id = #{record.sellerId,jdbcType=BIGINT},
        </if>
        <if test="record.sellerIdExpression!=null" >
          seller_id = ${record.sellerIdExpression},
        </if>
      </trim>
    </set>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shufensoft.crm.biz.domain.generation.shake.ShakeObtain" >
    update shake_obtain
    set gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      modified_by = #{modifiedBy,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      rock_title = #{rockTitle,jdbcType=VARCHAR},
      rock_result = #{rockResult,jdbcType=VARCHAR},
      rock_type = #{rockType,jdbcType=VARCHAR},
      shake_status = #{shakeStatus,jdbcType=VARCHAR},
      shake_date = #{shakeDate,jdbcType=TIMESTAMP},
      rock_id = #{rockId,jdbcType=BIGINT},
      obtain_id = #{obtainId,jdbcType=BIGINT},
      obtain_date = #{obtainDate,jdbcType=TIMESTAMP},
      seller_id = #{sellerId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>